{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moham\\\\Downloads\\\\Comimttee\\\\frontend\\\\src\\\\pages\\\\Docter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddDoctor = () => {\n  _s();\n  const [doctorDetails, setDoctorDetails] = useState({\n    doctorCode: \"\",\n    name: \"\",\n    nationalId: \"\",\n    specialty: \"\",\n    password: \"\",\n    username: \"\",\n    appointmentDays: [],\n    appointmentTimes: []\n  });\n  const [message, setMessage] = useState(\"\");\n\n  // Assuming clinicId is stored in session storage after admin logs in\n  const clinicId = sessionStorage.getItem(\"clinicId\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/doctor/add\", {\n        ...doctorDetails,\n        clinicId // Add clinicId to associate doctor with a clinic\n      });\n      setMessage(response.data.message);\n      // Reset form\n      setDoctorDetails({\n        doctorCode: \"\",\n        name: \"\",\n        nationalId: \"\",\n        specialty: \"\",\n        password: \"\",\n        username: \"\",\n        appointmentDays: [],\n        appointmentTimes: []\n      });\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setMessage(\"Error adding doctor: \" + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add Doctor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Doctor Code\",\n        value: doctorDetails.doctorCode,\n        onChange: e => setDoctorDetails({\n          ...doctorDetails,\n          doctorCode: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Doctor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(AddDoctor, \"xvMJHtXTT9qsQwhU33TvMhGbOQg=\");\n_c = AddDoctor;\nexport default AddDoctor;\nvar _c;\n$RefreshReg$(_c, \"AddDoctor\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","AddDoctor","_s","doctorDetails","setDoctorDetails","doctorCode","name","nationalId","specialty","password","username","appointmentDays","appointmentTimes","message","setMessage","clinicId","sessionStorage","getItem","handleSubmit","e","preventDefault","response","post","data","error","_error$response","_error$response$data","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/moham/Downloads/Comimttee/frontend/src/pages/Docter.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst AddDoctor = () => {\r\n  const [doctorDetails, setDoctorDetails] = useState({\r\n    doctorCode: \"\",\r\n    name: \"\",\r\n    nationalId: \"\",\r\n    specialty: \"\",\r\n    password: \"\",\r\n    username: \"\",\r\n    appointmentDays: [],\r\n    appointmentTimes: [],\r\n  });\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  // Assuming clinicId is stored in session storage after admin logs in\r\n  const clinicId = sessionStorage.getItem(\"clinicId\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/doctor/add\", {\r\n        ...doctorDetails,\r\n        clinicId, // Add clinicId to associate doctor with a clinic\r\n      });\r\n      setMessage(response.data.message);\r\n      // Reset form\r\n      setDoctorDetails({\r\n        doctorCode: \"\",\r\n        name: \"\",\r\n        nationalId: \"\",\r\n        specialty: \"\",\r\n        password: \"\",\r\n        username: \"\",\r\n        appointmentDays: [],\r\n        appointmentTimes: [],\r\n      });\r\n    } catch (error) {\r\n      setMessage(\"Error adding doctor: \" + (error.response?.data?.message || error.message));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Add Doctor</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Add form fields for doctor details */}\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Doctor Code\"\r\n          value={doctorDetails.doctorCode}\r\n          onChange={(e) => setDoctorDetails({ ...doctorDetails, doctorCode: e.target.value })}\r\n          required\r\n        />\r\n        {/* Add other input fields similarly */}\r\n        <button type=\"submit\">Add Doctor</button>\r\n      </form>\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddDoctor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}