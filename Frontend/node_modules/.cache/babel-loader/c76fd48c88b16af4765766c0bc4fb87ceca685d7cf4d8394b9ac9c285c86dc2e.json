{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moham\\\\Downloads\\\\Comimttee\\\\frontend\\\\src\\\\pages\\\\stateCityData.js\",\n  _s = $RefreshSig$();\nexport const states = [{\n  value: 'AF',\n  label: 'Afghanistan'\n}, {\n  value: 'AX',\n  label: 'Åland Islands'\n}, {\n  value: 'AL',\n  label: 'Albania'\n}, {\n  value: 'DZ',\n  label: 'Algeria'\n}, {\n  value: 'AS',\n  label: 'American Samoa'\n}, {\n  value: 'AD',\n  label: 'Andorra'\n}, {\n  value: 'AO',\n  label: 'Angola'\n}, {\n  value: 'AI',\n  label: 'Anguilla'\n}, {\n  value: 'AG',\n  label: 'Antigua and Barbuda'\n}, {\n  value: 'AR',\n  label: 'Argentina'\n}, {\n  value: 'AM',\n  label: 'Armenia'\n}, {\n  value: 'AW',\n  label: 'Aruba'\n}, {\n  value: 'AU',\n  label: 'Australia'\n}, {\n  value: 'AT',\n  label: 'Austria'\n}, {\n  value: 'AZ',\n  label: 'Azerbaijan'\n}, {\n  value: 'BS',\n  label: 'Bahamas'\n}, {\n  value: 'BH',\n  label: 'Bahrain'\n}, {\n  value: 'BD',\n  label: 'Bangladesh'\n}, {\n  value: 'BB',\n  label: 'Barbados'\n}, {\n  value: 'BY',\n  label: 'Belarus'\n}, {\n  value: 'BE',\n  label: 'Belgium'\n}, {\n  value: 'BZ',\n  label: 'Belize'\n}, {\n  value: 'BJ',\n  label: 'Benin'\n}, {\n  value: 'BM',\n  label: 'Bermuda'\n}, {\n  value: 'BT',\n  label: 'Bhutan'\n}, {\n  value: 'BO',\n  label: 'Bolivia'\n}, {\n  value: 'BA',\n  label: 'Bosnia and Herzegovina'\n}, {\n  value: 'BW',\n  label: 'Botswana'\n}, {\n  value: 'BR',\n  label: 'Brazil'\n}, {\n  value: 'BN',\n  label: 'Brunei Darussalam'\n}, {\n  value: 'BG',\n  label: 'Bulgaria'\n}, {\n  value: 'BF',\n  label: 'Burkina Faso'\n}, {\n  value: 'BI',\n  label: 'Burundi'\n}, {\n  value: 'CV',\n  label: 'Cabo Verde'\n}, {\n  value: 'KH',\n  label: 'Cambodia'\n}, {\n  value: 'CM',\n  label: 'Cameroon'\n}, {\n  value: 'CA',\n  label: 'Canada'\n}, {\n  value: 'KY',\n  label: 'Cayman Islands'\n}, {\n  value: 'CF',\n  label: 'Central African Republic'\n}, {\n  value: 'TD',\n  label: 'Chad'\n}, {\n  value: 'CL',\n  label: 'Chile'\n}, {\n  value: 'CN',\n  label: 'China'\n}, {\n  value: 'CO',\n  label: 'Colombia'\n}, {\n  value: 'KM',\n  label: 'Comoros'\n}, {\n  value: 'CG',\n  label: 'Congo'\n}, {\n  value: 'CD',\n  label: 'Congo, the Democratic Republic of the'\n}, {\n  value: 'CR',\n  label: 'Costa Rica'\n}, {\n  value: 'CI',\n  label: \"Côte d'Ivoire\"\n}, {\n  value: 'HR',\n  label: 'Croatia'\n}, {\n  value: 'CU',\n  label: 'Cuba'\n}, {\n  value: 'CY',\n  label: 'Cyprus'\n}, {\n  value: 'CZ',\n  label: 'Czechia'\n}, {\n  value: 'DK',\n  label: 'Denmark'\n}, {\n  value: 'DJ',\n  label: 'Djibouti'\n}, {\n  value: 'DM',\n  label: 'Dominica'\n}, {\n  value: 'DO',\n  label: 'Dominican Republic'\n}, {\n  value: 'EC',\n  label: 'Ecuador'\n}, {\n  value: 'EG',\n  label: 'Egypt'\n}, {\n  value: 'SV',\n  label: 'El Salvador'\n}, {\n  value: 'GQ',\n  label: 'Equatorial Guinea'\n}, {\n  value: 'ER',\n  label: 'Eritrea'\n}, {\n  value: 'EE',\n  label: 'Estonia'\n}, {\n  value: 'SZ',\n  label: 'Eswatini'\n}, {\n  value: 'ET',\n  label: 'Ethiopia'\n}, {\n  value: 'FJ',\n  label: 'Fiji'\n}, {\n  value: 'FI',\n  label: 'Finland'\n}, {\n  value: 'FR',\n  label: 'France'\n}, {\n  value: 'GA',\n  label: 'Gabon'\n}, {\n  value: 'GM',\n  label: 'Gambia'\n}, {\n  value: 'GE',\n  label: 'Georgia'\n}, {\n  value: 'DE',\n  label: 'Germany'\n}, {\n  value: 'GH',\n  label: 'Ghana'\n}, {\n  value: 'GI',\n  label: 'Gibraltar'\n}, {\n  value: 'GR',\n  label: 'Greece'\n}, {\n  value: 'GL',\n  label: 'Greenland'\n}, {\n  value: 'GD',\n  label: 'Grenada'\n}, {\n  value: 'GP',\n  label: 'Guadeloupe'\n}, {\n  value: 'GU',\n  label: 'Guam'\n}, {\n  value: 'GT',\n  label: 'Guatemala'\n}, {\n  value: 'GN',\n  label: 'Guinea'\n}, {\n  value: 'GW',\n  label: 'Guinea-Bissau'\n}, {\n  value: 'GY',\n  label: 'Guyana'\n}, {\n  value: 'HT',\n  label: 'Haiti'\n}, {\n  value: 'HN',\n  label: 'Honduras'\n}, {\n  value: 'HK',\n  label: 'Hong Kong'\n}, {\n  value: 'HU',\n  label: 'Hungary'\n}, {\n  value: 'IS',\n  label: 'Iceland'\n}, {\n  value: 'IN',\n  label: 'India'\n}, {\n  value: 'ID',\n  label: 'Indonesia'\n}, {\n  value: 'IR',\n  label: 'Iran'\n}, {\n  value: 'IQ',\n  label: 'Iraq'\n}, {\n  value: 'IE',\n  label: 'Ireland'\n}, {\n  value: 'IM',\n  label: 'Isle of Man'\n}, {\n  value: 'IL',\n  label: 'Israel'\n}, {\n  value: 'IT',\n  label: 'Italy'\n}, {\n  value: 'JM',\n  label: 'Jamaica'\n}, {\n  value: 'JP',\n  label: 'Japan'\n}, {\n  value: 'JE',\n  label: 'Jersey'\n}, {\n  value: 'JO',\n  label: 'Jordan'\n}, {\n  value: 'KZ',\n  label: 'Kazakhstan'\n}, {\n  value: 'KE',\n  label: 'Kenya'\n}, {\n  value: 'KI',\n  label: 'Kiribati'\n}, {\n  value: 'KP',\n  label: \"Korea, Democratic People's Republic of\"\n}, {\n  value: 'KR',\n  label: 'Korea, Republic of'\n}, {\n  value: 'KW',\n  label: 'Kuwait'\n}, {\n  value: 'KG',\n  label: 'Kyrgyzstan'\n}, {\n  value: 'LA',\n  label: 'Laos'\n}, {\n  value: 'LV',\n  label: 'Latvia'\n}, {\n  value: 'LB',\n  label: 'Lebanon'\n}, {\n  value: 'LS',\n  label: 'Lesotho'\n}, {\n  value: 'LR',\n  label: 'Liberia'\n}, {\n  value: 'LY',\n  label: 'Libya'\n}, {\n  value: 'LI',\n  label: 'Liechtenstein'\n}, {\n  value: 'LT',\n  label: 'Lithuania'\n}, {\n  value: 'LU',\n  label: 'Luxembourg'\n}, {\n  value: 'MG',\n  label: 'Madagascar'\n}, {\n  value: 'MW',\n  label: 'Malawi'\n}, {\n  value: 'MY',\n  label: 'Malaysia'\n}, {\n  value: 'MV',\n  label: 'Maldives'\n}, {\n  value: 'ML',\n  label: 'Mali'\n}, {\n  value: 'MT',\n  label: 'Malta'\n}, {\n  value: 'MH',\n  label: 'Marshall Islands'\n}, {\n  value: 'MQ',\n  label: 'Martinique'\n}, {\n  value: 'MR',\n  label: 'Mauritania'\n}, {\n  value: 'MU',\n  label: 'Mauritius'\n}, {\n  value: 'YT',\n  label: 'Mayotte'\n}, {\n  value: 'MX',\n  label: 'Mexico'\n}, {\n  value: 'FM',\n  label: 'Micronesia, Federated States of'\n}, {\n  value: 'MD',\n  label: 'Moldova, Republic of'\n}, {\n  value: 'MC',\n  label: 'Monaco'\n}, {\n  value: 'MN',\n  label: 'Mongolia'\n}, {\n  value: 'ME',\n  label: 'Montenegro'\n}, {\n  value: 'MS',\n  label: 'Montserrat'\n}, {\n  value: 'MA',\n  label: 'Morocco'\n}, {\n  value: 'MZ',\n  label: 'Mozambique'\n}, {\n  value: 'MM',\n  label: 'Myanmar'\n}, {\n  value: 'NA',\n  label: 'Namibia'\n}, {\n  value: 'NR',\n  label: 'Nauru'\n}, {\n  value: 'NP',\n  label: 'Nepal'\n}, {\n  value: 'NL',\n  label: 'Netherlands'\n}, {\n  value: 'NC',\n  label: 'New Caledonia'\n}, {\n  value: 'NZ',\n  label: 'New Zealand'\n}, {\n  value: 'NI',\n  label: 'Nicaragua'\n}, {\n  value: 'NE',\n  label: 'Niger'\n}, {\n  value: 'NG',\n  label: 'Nigeria'\n}, {\n  value: 'NU',\n  label: 'Niue'\n}, {\n  value: 'NF',\n  label: 'Norfolk Island'\n}, {\n  value: 'MK',\n  label: 'North Macedonia'\n}, {\n  value: 'MP',\n  label: 'Northern Mariana Islands'\n}, {\n  value: 'NO',\n  label: 'Norway'\n}, {\n  value: 'OM',\n  label: 'Oman'\n}, {\n  value: 'PK',\n  label: 'Pakistan'\n}, {\n  value: 'PW',\n  label: 'Palau'\n}, {\n  value: 'PS',\n  label: 'Palestine, State of'\n}, {\n  value: 'PA',\n  label: 'Panama'\n}, {\n  value: 'PG',\n  label: 'Papua New Guinea'\n}, {\n  value: 'PY',\n  label: 'Paraguay'\n}, {\n  value: 'PE',\n  label: 'Peru'\n}, {\n  value: 'PH',\n  label: 'Philippines'\n}, {\n  value: 'PN',\n  label: 'Pitcairn'\n}, {\n  value: 'PL',\n  label: 'Poland'\n}, {\n  value: 'PT',\n  label: 'Portugal'\n}, {\n  value: 'PR',\n  label: 'Puerto Rico'\n}, {\n  value: 'QA',\n  label: 'Qatar'\n}, {\n  value: 'RO',\n  label: 'Romania'\n}, {\n  value: 'RU',\n  label: 'Russian Federation'\n}, {\n  value: 'RW',\n  label: 'Rwanda'\n}, {\n  value: 'RE',\n  label: 'Réunion'\n}, {\n  value: 'BL',\n  label: 'Saint Barthélemy'\n}, {\n  value: 'SH',\n  label: 'Saint Helena, Ascension and Tristan da Cunha'\n}, {\n  value: 'KN',\n  label: 'Saint Kitts and Nevis'\n}, {\n  value: 'LC',\n  label: 'Saint Lucia'\n}, {\n  value: 'MF',\n  label: 'Saint Martin (French part)'\n}, {\n  value: 'PM',\n  label: 'Saint Pierre and Miquelon'\n}, {\n  value: 'VC',\n  label: 'Saint Vincent and the Grenadines'\n}, {\n  value: 'WS',\n  label: 'Samoa'\n}, {\n  value: 'SM',\n  label: 'San Marino'\n}, {\n  value: 'ST',\n  label: 'Sao Tome and Principe'\n}, {\n  value: 'SA',\n  label: 'Saudi Arabia'\n}, {\n  value: 'SN',\n  label: 'Senegal'\n}, {\n  value: 'RS',\n  label: 'Serbia'\n}, {\n  value: 'SC',\n  label: 'Seychelles'\n}, {\n  value: 'SL',\n  label: 'Sierra Leone'\n}, {\n  value: 'SG',\n  label: 'Singapore'\n}, {\n  value: 'SX',\n  label: 'Sint Maarten (Dutch part)'\n}, {\n  value: 'SK',\n  label: 'Slovakia'\n}, {\n  value: 'SI',\n  label: 'Slovenia'\n}, {\n  value: 'SB',\n  label: 'Solomon Islands'\n}, {\n  value: 'SO',\n  label: 'Somalia'\n}, {\n  value: 'ZA',\n  label: 'South Africa'\n}, {\n  value: 'GS',\n  label: 'South Georgia and the South Sandwich Islands'\n}, {\n  value: 'SS',\n  label: 'South Sudan'\n}, {\n  value: 'ES',\n  label: 'Spain'\n}, {\n  value: 'LK',\n  label: 'Sri Lanka'\n}, {\n  value: 'SD',\n  label: 'Sudan'\n}, {\n  value: 'SR',\n  label: 'Suriname'\n}, {\n  value: 'SZ',\n  label: 'Svalbard and Jan Mayen'\n}, {\n  value: 'SE',\n  label: 'Sweden'\n}, {\n  value: 'CH',\n  label: 'Switzerland'\n}, {\n  value: 'SY',\n  label: 'Syrian Arab Republic'\n}, {\n  value: 'TW',\n  label: 'Taiwan'\n}, {\n  value: 'TJ',\n  label: 'Tajikistan'\n}, {\n  value: 'TZ',\n  label: 'Tanzania, United Republic of'\n}, {\n  value: 'TH',\n  label: 'Thailand'\n}, {\n  value: 'TL',\n  label: 'Timor-Leste'\n}, {\n  value: 'TG',\n  label: 'Togo'\n}, {\n  value: 'TK',\n  label: 'Tokelau'\n}, {\n  value: 'TO',\n  label: 'Tonga'\n}, {\n  value: 'TT',\n  label: 'Trinidad and Tobago'\n}, {\n  value: 'TN',\n  label: 'Tunisia'\n}, {\n  value: 'TR',\n  label: 'Turkey'\n}, {\n  value: 'TM',\n  label: 'Turkmenistan'\n}, {\n  value: 'TC',\n  label: 'Turks and Caicos Islands'\n}, {\n  value: 'TV',\n  label: 'Tuvalu'\n}, {\n  value: 'UG',\n  label: 'Uganda'\n}, {\n  value: 'UA',\n  label: 'Ukraine'\n}, {\n  value: 'AE',\n  label: 'United Arab Emirates'\n}, {\n  value: 'GB',\n  label: 'United Kingdom'\n}, {\n  value: 'US',\n  label: 'United States of America'\n}, {\n  value: 'UM',\n  label: 'United States Minor Outlying Islands'\n}, {\n  value: 'VI',\n  label: 'United States Virgin Islands'\n}, {\n  value: 'UY',\n  label: 'Uruguay'\n}, {\n  value: 'UZ',\n  label: 'Uzbekistan'\n}, {\n  value: 'VU',\n  label: 'Vanuatu'\n}, {\n  value: 'VE',\n  label: 'Venezuela'\n}, {\n  value: 'VN',\n  label: 'Viet Nam'\n}, {\n  value: 'WF',\n  label: 'Wallis and Futuna'\n}, {\n  value: 'EH',\n  label: 'Western Sahara'\n}, {\n  value: 'YE',\n  label: 'Yemen'\n}, {\n  value: 'ZM',\n  label: 'Zambia'\n}, {\n  value: 'ZW',\n  label: 'Zimbabwe'\n}];\nexport const cities = {\n  CA: [{\n    value: 'LA',\n    label: 'Los Angeles'\n  }, {\n    value: 'SF',\n    label: 'San Francisco'\n  }\n  // Add more cities for California\n  ],\n  NY: [{\n    value: 'NYC',\n    label: 'New York City'\n  }, {\n    value: 'BUF',\n    label: 'Buffalo'\n  }\n  // Add more cities for New York\n  ],\n  TX: [{\n    value: 'HOU',\n    label: 'Houston'\n  }, {\n    value: 'DAL',\n    label: 'Dallas'\n  }\n  // Add more cities for Texas\n  ]\n};\nimport React, { useState } from 'react';\nimport Select from 'react-select';\n\n// Complete Country Data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst countries = [];\n\n// Placeholder data for states and cities\nconst statesData = {\n  AF: [{\n    value: 'KAB',\n    label: 'Kabul'\n  }, {\n    value: 'HER',\n    label: 'Herat'\n  }],\n  US: [{\n    value: 'CA',\n    label: 'California'\n  }, {\n    value: 'NY',\n    label: 'New York'\n  }, {\n    value: 'TX',\n    label: 'Texas'\n  }]\n  // Add more states for other countries...\n};\nconst citiesData = {\n  KAB: [{\n    value: 'KAB',\n    label: 'Kabul City'\n  }],\n  HER: [{\n    value: 'HER',\n    label: 'Herat City'\n  }],\n  CA: [{\n    value: 'LA',\n    label: 'Los Angeles'\n  }, {\n    value: 'SF',\n    label: 'San Francisco'\n  }],\n  NY: [{\n    value: 'NYC',\n    label: 'New York City'\n  }, {\n    value: 'BUF',\n    label: 'Buffalo'\n  }],\n  TX: [{\n    value: 'HOU',\n    label: 'Houston'\n  }, {\n    value: 'DAL',\n    label: 'Dallas'\n  }]\n  // Add more cities for other states...\n};\nconst ClientManagement = () => {\n  _s();\n  const [selectedCountry, setSelectedCountry] = useState(null);\n  const [selectedState, setSelectedState] = useState(null);\n  const [states, setStates] = useState([]);\n  const [cities, setCities] = useState([]);\n  const handleCountryChange = country => {\n    setSelectedCountry(country);\n    setStates(statesData[country.value] || []);\n    setSelectedState(null);\n    setCities([]);\n  };\n  const handleStateChange = state => {\n    setSelectedState(state);\n    setCities(citiesData[state.value] || []);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Select Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      options: countries,\n      onChange: handleCountryChange,\n      placeholder: \"Select Country\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      options: states,\n      onChange: handleStateChange,\n      placeholder: \"Select State\",\n      isDisabled: !selectedCountry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      options: cities,\n      onChange: city => console.log(city),\n      placeholder: \"Select City\",\n      isDisabled: !selectedState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 315,\n    columnNumber: 5\n  }, this);\n};\n_s(ClientManagement, \"wT0y7eJbLVnbBwyXLMQH1ufTcYU=\");\n_c = ClientManagement;\nexport default ClientManagement;\nvar _c;\n$RefreshReg$(_c, \"ClientManagement\");","map":{"version":3,"names":["states","value","label","cities","CA","NY","TX","React","useState","Select","jsxDEV","_jsxDEV","countries","statesData","AF","US","citiesData","KAB","HER","ClientManagement","_s","selectedCountry","setSelectedCountry","selectedState","setSelectedState","setStates","setCities","handleCountryChange","country","handleStateChange","state","children","fileName","_jsxFileName","lineNumber","columnNumber","options","onChange","placeholder","isDisabled","city","console","log","_c","$RefreshReg$"],"sources":["C:/Users/moham/Downloads/Comimttee/frontend/src/pages/stateCityData.js"],"sourcesContent":["export const states = [\r\n    { value: 'AF', label: 'Afghanistan' },\r\n    { value: 'AX', label: 'Åland Islands' },\r\n    { value: 'AL', label: 'Albania' },\r\n    { value: 'DZ', label: 'Algeria' },\r\n    { value: 'AS', label: 'American Samoa' },\r\n    { value: 'AD', label: 'Andorra' },\r\n    { value: 'AO', label: 'Angola' },\r\n    { value: 'AI', label: 'Anguilla' },\r\n    { value: 'AG', label: 'Antigua and Barbuda' },\r\n    { value: 'AR', label: 'Argentina' },\r\n    { value: 'AM', label: 'Armenia' },\r\n    { value: 'AW', label: 'Aruba' },\r\n    { value: 'AU', label: 'Australia' },\r\n    { value: 'AT', label: 'Austria' },\r\n    { value: 'AZ', label: 'Azerbaijan' },\r\n    { value: 'BS', label: 'Bahamas' },\r\n    { value: 'BH', label: 'Bahrain' },\r\n    { value: 'BD', label: 'Bangladesh' },\r\n    { value: 'BB', label: 'Barbados' },\r\n    { value: 'BY', label: 'Belarus' },\r\n    { value: 'BE', label: 'Belgium' },\r\n    { value: 'BZ', label: 'Belize' },\r\n    { value: 'BJ', label: 'Benin' },\r\n    { value: 'BM', label: 'Bermuda' },\r\n    { value: 'BT', label: 'Bhutan' },\r\n    { value: 'BO', label: 'Bolivia' },\r\n    { value: 'BA', label: 'Bosnia and Herzegovina' },\r\n    { value: 'BW', label: 'Botswana' },\r\n    { value: 'BR', label: 'Brazil' },\r\n    { value: 'BN', label: 'Brunei Darussalam' },\r\n    { value: 'BG', label: 'Bulgaria' },\r\n    { value: 'BF', label: 'Burkina Faso' },\r\n    { value: 'BI', label: 'Burundi' },\r\n    { value: 'CV', label: 'Cabo Verde' },\r\n    { value: 'KH', label: 'Cambodia' },\r\n    { value: 'CM', label: 'Cameroon' },\r\n    { value: 'CA', label: 'Canada' },\r\n    { value: 'KY', label: 'Cayman Islands' },\r\n    { value: 'CF', label: 'Central African Republic' },\r\n    { value: 'TD', label: 'Chad' },\r\n    { value: 'CL', label: 'Chile' },\r\n    { value: 'CN', label: 'China' },\r\n    { value: 'CO', label: 'Colombia' },\r\n    { value: 'KM', label: 'Comoros' },\r\n    { value: 'CG', label: 'Congo' },\r\n    { value: 'CD', label: 'Congo, the Democratic Republic of the' },\r\n    { value: 'CR', label: 'Costa Rica' },\r\n    { value: 'CI', label: \"Côte d'Ivoire\" },\r\n    { value: 'HR', label: 'Croatia' },\r\n    { value: 'CU', label: 'Cuba' },\r\n    { value: 'CY', label: 'Cyprus' },\r\n    { value: 'CZ', label: 'Czechia' },\r\n    { value: 'DK', label: 'Denmark' },\r\n    { value: 'DJ', label: 'Djibouti' },\r\n    { value: 'DM', label: 'Dominica' },\r\n    { value: 'DO', label: 'Dominican Republic' },\r\n    { value: 'EC', label: 'Ecuador' },\r\n    { value: 'EG', label: 'Egypt' },\r\n    { value: 'SV', label: 'El Salvador' },\r\n    { value: 'GQ', label: 'Equatorial Guinea' },\r\n    { value: 'ER', label: 'Eritrea' },\r\n    { value: 'EE', label: 'Estonia' },\r\n    { value: 'SZ', label: 'Eswatini' },\r\n    { value: 'ET', label: 'Ethiopia' },\r\n    { value: 'FJ', label: 'Fiji' },\r\n    { value: 'FI', label: 'Finland' },\r\n    { value: 'FR', label: 'France' },\r\n    { value: 'GA', label: 'Gabon' },\r\n    { value: 'GM', label: 'Gambia' },\r\n    { value: 'GE', label: 'Georgia' },\r\n    { value: 'DE', label: 'Germany' },\r\n    { value: 'GH', label: 'Ghana' },\r\n    { value: 'GI', label: 'Gibraltar' },\r\n    { value: 'GR', label: 'Greece' },\r\n    { value: 'GL', label: 'Greenland' },\r\n    { value: 'GD', label: 'Grenada' },\r\n    { value: 'GP', label: 'Guadeloupe' },\r\n    { value: 'GU', label: 'Guam' },\r\n    { value: 'GT', label: 'Guatemala' },\r\n    { value: 'GN', label: 'Guinea' },\r\n    { value: 'GW', label: 'Guinea-Bissau' },\r\n    { value: 'GY', label: 'Guyana' },\r\n    { value: 'HT', label: 'Haiti' },\r\n    { value: 'HN', label: 'Honduras' },\r\n    { value: 'HK', label: 'Hong Kong' },\r\n    { value: 'HU', label: 'Hungary' },\r\n    { value: 'IS', label: 'Iceland' },\r\n    { value: 'IN', label: 'India' },\r\n    { value: 'ID', label: 'Indonesia' },\r\n    { value: 'IR', label: 'Iran' },\r\n    { value: 'IQ', label: 'Iraq' },\r\n    { value: 'IE', label: 'Ireland' },\r\n    { value: 'IM', label: 'Isle of Man' },\r\n    { value: 'IL', label: 'Israel' },\r\n    { value: 'IT', label: 'Italy' },\r\n    { value: 'JM', label: 'Jamaica' },\r\n    { value: 'JP', label: 'Japan' },\r\n    { value: 'JE', label: 'Jersey' },\r\n    { value: 'JO', label: 'Jordan' },\r\n    { value: 'KZ', label: 'Kazakhstan' },\r\n    { value: 'KE', label: 'Kenya' },\r\n    { value: 'KI', label: 'Kiribati' },\r\n    { value: 'KP', label: \"Korea, Democratic People's Republic of\" },\r\n    { value: 'KR', label: 'Korea, Republic of' },\r\n    { value: 'KW', label: 'Kuwait' },\r\n    { value: 'KG', label: 'Kyrgyzstan' },\r\n    { value: 'LA', label: 'Laos' },\r\n    { value: 'LV', label: 'Latvia' },\r\n    { value: 'LB', label: 'Lebanon' },\r\n    { value: 'LS', label: 'Lesotho' },\r\n    { value: 'LR', label: 'Liberia' },\r\n    { value: 'LY', label: 'Libya' },\r\n    { value: 'LI', label: 'Liechtenstein' },\r\n    { value: 'LT', label: 'Lithuania' },\r\n    { value: 'LU', label: 'Luxembourg' },\r\n    { value: 'MG', label: 'Madagascar' },\r\n    { value: 'MW', label: 'Malawi' },\r\n    { value: 'MY', label: 'Malaysia' },\r\n    { value: 'MV', label: 'Maldives' },\r\n    { value: 'ML', label: 'Mali' },\r\n    { value: 'MT', label: 'Malta' },\r\n    { value: 'MH', label: 'Marshall Islands' },\r\n    { value: 'MQ', label: 'Martinique' },\r\n    { value: 'MR', label: 'Mauritania' },\r\n    { value: 'MU', label: 'Mauritius' },\r\n    { value: 'YT', label: 'Mayotte' },\r\n    { value: 'MX', label: 'Mexico' },\r\n    { value: 'FM', label: 'Micronesia, Federated States of' },\r\n    { value: 'MD', label: 'Moldova, Republic of' },\r\n    { value: 'MC', label: 'Monaco' },\r\n    { value: 'MN', label: 'Mongolia' },\r\n    { value: 'ME', label: 'Montenegro' },\r\n    { value: 'MS', label: 'Montserrat' },\r\n    { value: 'MA', label: 'Morocco' },\r\n    { value: 'MZ', label: 'Mozambique' },\r\n    { value: 'MM', label: 'Myanmar' },\r\n    { value: 'NA', label: 'Namibia' },\r\n    { value: 'NR', label: 'Nauru' },\r\n    { value: 'NP', label: 'Nepal' },\r\n    { value: 'NL', label: 'Netherlands' },\r\n    { value: 'NC', label: 'New Caledonia' },\r\n    { value: 'NZ', label: 'New Zealand' },\r\n    { value: 'NI', label: 'Nicaragua' },\r\n    { value: 'NE', label: 'Niger' },\r\n    { value: 'NG', label: 'Nigeria' },\r\n    { value: 'NU', label: 'Niue' },\r\n    { value: 'NF', label: 'Norfolk Island' },\r\n    { value: 'MK', label: 'North Macedonia' },\r\n    { value: 'MP', label: 'Northern Mariana Islands' },\r\n    { value: 'NO', label: 'Norway' },\r\n    { value: 'OM', label: 'Oman' },\r\n    { value: 'PK', label: 'Pakistan' },\r\n    { value: 'PW', label: 'Palau' },\r\n    { value: 'PS', label: 'Palestine, State of' },\r\n    { value: 'PA', label: 'Panama' },\r\n    { value: 'PG', label: 'Papua New Guinea' },\r\n    { value: 'PY', label: 'Paraguay' },\r\n    { value: 'PE', label: 'Peru' },\r\n    { value: 'PH', label: 'Philippines' },\r\n    { value: 'PN', label: 'Pitcairn' },\r\n    { value: 'PL', label: 'Poland' },\r\n    { value: 'PT', label: 'Portugal' },\r\n    { value: 'PR', label: 'Puerto Rico' },\r\n    { value: 'QA', label: 'Qatar' },\r\n    { value: 'RO', label: 'Romania' },\r\n    { value: 'RU', label: 'Russian Federation' },\r\n    { value: 'RW', label: 'Rwanda' },\r\n    { value: 'RE', label: 'Réunion' },\r\n    { value: 'BL', label: 'Saint Barthélemy' },\r\n    { value: 'SH', label: 'Saint Helena, Ascension and Tristan da Cunha' },\r\n    { value: 'KN', label: 'Saint Kitts and Nevis' },\r\n    { value: 'LC', label: 'Saint Lucia' },\r\n    { value: 'MF', label: 'Saint Martin (French part)' },\r\n    { value: 'PM', label: 'Saint Pierre and Miquelon' },\r\n    { value: 'VC', label: 'Saint Vincent and the Grenadines' },\r\n    { value: 'WS', label: 'Samoa' },\r\n    { value: 'SM', label: 'San Marino' },\r\n    { value: 'ST', label: 'Sao Tome and Principe' },\r\n    { value: 'SA', label: 'Saudi Arabia' },\r\n    { value: 'SN', label: 'Senegal' },\r\n    { value: 'RS', label: 'Serbia' },\r\n    { value: 'SC', label: 'Seychelles' },\r\n    { value: 'SL', label: 'Sierra Leone' },\r\n    { value: 'SG', label: 'Singapore' },\r\n    { value: 'SX', label: 'Sint Maarten (Dutch part)' },\r\n    { value: 'SK', label: 'Slovakia' },\r\n    { value: 'SI', label: 'Slovenia' },\r\n    { value: 'SB', label: 'Solomon Islands' },\r\n    { value: 'SO', label: 'Somalia' },\r\n    { value: 'ZA', label: 'South Africa' },\r\n    { value: 'GS', label: 'South Georgia and the South Sandwich Islands' },\r\n    { value: 'SS', label: 'South Sudan' },\r\n    { value: 'ES', label: 'Spain' },\r\n    { value: 'LK', label: 'Sri Lanka' },\r\n    { value: 'SD', label: 'Sudan' },\r\n    { value: 'SR', label: 'Suriname' },\r\n    { value: 'SZ', label: 'Svalbard and Jan Mayen' },\r\n    { value: 'SE', label: 'Sweden' },\r\n    { value: 'CH', label: 'Switzerland' },\r\n    { value: 'SY', label: 'Syrian Arab Republic' },\r\n    { value: 'TW', label: 'Taiwan' },\r\n    { value: 'TJ', label: 'Tajikistan' },\r\n    { value: 'TZ', label: 'Tanzania, United Republic of' },\r\n    { value: 'TH', label: 'Thailand' },\r\n    { value: 'TL', label: 'Timor-Leste' },\r\n    { value: 'TG', label: 'Togo' },\r\n    { value: 'TK', label: 'Tokelau' },\r\n    { value: 'TO', label: 'Tonga' },\r\n    { value: 'TT', label: 'Trinidad and Tobago' },\r\n    { value: 'TN', label: 'Tunisia' },\r\n    { value: 'TR', label: 'Turkey' },\r\n    { value: 'TM', label: 'Turkmenistan' },\r\n    { value: 'TC', label: 'Turks and Caicos Islands' },\r\n    { value: 'TV', label: 'Tuvalu' },\r\n    { value: 'UG', label: 'Uganda' },\r\n    { value: 'UA', label: 'Ukraine' },\r\n    { value: 'AE', label: 'United Arab Emirates' },\r\n    { value: 'GB', label: 'United Kingdom' },\r\n    { value: 'US', label: 'United States of America' },\r\n    { value: 'UM', label: 'United States Minor Outlying Islands' },\r\n    { value: 'VI', label: 'United States Virgin Islands' },\r\n    { value: 'UY', label: 'Uruguay' },\r\n    { value: 'UZ', label: 'Uzbekistan' },\r\n    { value: 'VU', label: 'Vanuatu' },\r\n    { value: 'VE', label: 'Venezuela' },\r\n    { value: 'VN', label: 'Viet Nam' },\r\n    { value: 'WF', label: 'Wallis and Futuna' },\r\n    { value: 'EH', label: 'Western Sahara' },\r\n    { value: 'YE', label: 'Yemen' },\r\n    { value: 'ZM', label: 'Zambia' },\r\n    { value: 'ZW', label: 'Zimbabwe' },\r\n  ];\r\n  \r\n  export const cities = {\r\n    CA: [\r\n      { value: 'LA', label: 'Los Angeles' },\r\n      { value: 'SF', label: 'San Francisco' },\r\n      // Add more cities for California\r\n    ],\r\n    NY: [\r\n      { value: 'NYC', label: 'New York City' },\r\n      { value: 'BUF', label: 'Buffalo' },\r\n      // Add more cities for New York\r\n    ],\r\n    TX: [\r\n      { value: 'HOU', label: 'Houston' },\r\n      { value: 'DAL', label: 'Dallas' },\r\n      // Add more cities for Texas\r\n    ]\r\n  };\r\n  import React, { useState } from 'react';\r\nimport Select from 'react-select';\r\n\r\n// Complete Country Data\r\nconst countries = [\r\n\r\n];\r\n\r\n// Placeholder data for states and cities\r\nconst statesData = {\r\n  AF: [\r\n    { value: 'KAB', label: 'Kabul' },\r\n    { value: 'HER', label: 'Herat' },\r\n  ],\r\n  US: [\r\n    { value: 'CA', label: 'California' },\r\n    { value: 'NY', label: 'New York' },\r\n    { value: 'TX', label: 'Texas' },\r\n  ],\r\n  // Add more states for other countries...\r\n};\r\n\r\nconst citiesData = {\r\n  KAB: [\r\n    { value: 'KAB', label: 'Kabul City' },\r\n  ],\r\n  HER: [\r\n    { value: 'HER', label: 'Herat City' },\r\n  ],\r\n  CA: [\r\n    { value: 'LA', label: 'Los Angeles' },\r\n    { value: 'SF', label: 'San Francisco' },\r\n  ],\r\n  NY: [\r\n    { value: 'NYC', label: 'New York City' },\r\n    { value: 'BUF', label: 'Buffalo' },\r\n  ],\r\n  TX: [\r\n    { value: 'HOU', label: 'Houston' },\r\n    { value: 'DAL', label: 'Dallas' },\r\n  ],\r\n  // Add more cities for other states...\r\n};\r\n\r\nconst ClientManagement = () => {\r\n  const [selectedCountry, setSelectedCountry] = useState(null);\r\n  const [selectedState, setSelectedState] = useState(null);\r\n  const [states, setStates] = useState([]);\r\n  const [cities, setCities] = useState([]);\r\n\r\n  const handleCountryChange = (country) => {\r\n    setSelectedCountry(country);\r\n    setStates(statesData[country.value] || []);\r\n    setSelectedState(null);\r\n    setCities([]);\r\n  };\r\n\r\n  const handleStateChange = (state) => {\r\n    setSelectedState(state);\r\n    setCities(citiesData[state.value] || []);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Select Location</h1>\r\n      <Select\r\n        options={countries}\r\n        onChange={handleCountryChange}\r\n        placeholder=\"Select Country\"\r\n      />\r\n      <Select\r\n        options={states}\r\n        onChange={handleStateChange}\r\n        placeholder=\"Select State\"\r\n        isDisabled={!selectedCountry}\r\n      />\r\n      <Select\r\n        options={cities}\r\n        onChange={(city) => console.log(city)}\r\n        placeholder=\"Select City\"\r\n        isDisabled={!selectedState}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientManagement;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}