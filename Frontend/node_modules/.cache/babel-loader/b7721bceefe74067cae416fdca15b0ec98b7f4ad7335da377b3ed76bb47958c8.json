{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moham\\\\Downloads\\\\Comimttee\\\\frontend\\\\src\\\\pages\\\\stateCityData.js\",\n  _s = $RefreshSig$();\nexport const states = [{\n  value: 'CA',\n  label: 'California'\n}, {\n  value: 'NY',\n  label: 'New York'\n}, {\n  value: 'TX',\n  label: 'Texas'\n}\n// Add more states as needed\n];\nexport const cities = {\n  CA: [{\n    value: 'LA',\n    label: 'Los Angeles'\n  }, {\n    value: 'SF',\n    label: 'San Francisco'\n  }\n  // Add more cities for California\n  ],\n  NY: [{\n    value: 'NYC',\n    label: 'New York City'\n  }, {\n    value: 'BUF',\n    label: 'Buffalo'\n  }\n  // Add more cities for New York\n  ],\n  TX: [{\n    value: 'HOU',\n    label: 'Houston'\n  }, {\n    value: 'DAL',\n    label: 'Dallas'\n  }\n  // Add more cities for Texas\n  ]\n};\nimport React, { useState } from 'react';\nimport Select from 'react-select';\n\n// Complete Country Data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst countries = [];\n\n// Placeholder data for states and cities\nconst statesData = {\n  AF: [{\n    value: 'KAB',\n    label: 'Kabul'\n  }, {\n    value: 'HER',\n    label: 'Herat'\n  }],\n  US: [{\n    value: 'CA',\n    label: 'California'\n  }, {\n    value: 'NY',\n    label: 'New York'\n  }, {\n    value: 'TX',\n    label: 'Texas'\n  }]\n  // Add more states for other countries...\n};\nconst citiesData = {\n  KAB: [{\n    value: 'KAB',\n    label: 'Kabul City'\n  }],\n  HER: [{\n    value: 'HER',\n    label: 'Herat City'\n  }],\n  CA: [{\n    value: 'LA',\n    label: 'Los Angeles'\n  }, {\n    value: 'SF',\n    label: 'San Francisco'\n  }],\n  NY: [{\n    value: 'NYC',\n    label: 'New York City'\n  }, {\n    value: 'BUF',\n    label: 'Buffalo'\n  }],\n  TX: [{\n    value: 'HOU',\n    label: 'Houston'\n  }, {\n    value: 'DAL',\n    label: 'Dallas'\n  }]\n  // Add more cities for other states...\n};\nconst ClientManagement = () => {\n  _s();\n  const [selectedCountry, setSelectedCountry] = useState(null);\n  const [selectedState, setSelectedState] = useState(null);\n  const [states, setStates] = useState([]);\n  const [cities, setCities] = useState([]);\n  const handleCountryChange = country => {\n    setSelectedCountry(country);\n    setStates(statesData[country.value] || []);\n    setSelectedState(null);\n    setCities([]);\n  };\n  const handleStateChange = state => {\n    setSelectedState(state);\n    setCities(citiesData[state.value] || []);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Select Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      options: countries,\n      onChange: handleCountryChange,\n      placeholder: \"Select Country\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      options: states,\n      onChange: handleStateChange,\n      placeholder: \"Select State\",\n      isDisabled: !selectedCountry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      options: cities,\n      onChange: city => console.log(city),\n      placeholder: \"Select City\",\n      isDisabled: !selectedState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(ClientManagement, \"wT0y7eJbLVnbBwyXLMQH1ufTcYU=\");\n_c = ClientManagement;\nexport default ClientManagement;\nvar _c;\n$RefreshReg$(_c, \"ClientManagement\");","map":{"version":3,"names":["states","value","label","cities","CA","NY","TX","React","useState","Select","jsxDEV","_jsxDEV","countries","statesData","AF","US","citiesData","KAB","HER","ClientManagement","_s","selectedCountry","setSelectedCountry","selectedState","setSelectedState","setStates","setCities","handleCountryChange","country","handleStateChange","state","children","fileName","_jsxFileName","lineNumber","columnNumber","options","onChange","placeholder","isDisabled","city","console","log","_c","$RefreshReg$"],"sources":["C:/Users/moham/Downloads/Comimttee/frontend/src/pages/stateCityData.js"],"sourcesContent":["export const states = [\r\n    { value: 'CA', label: 'California' },\r\n    { value: 'NY', label: 'New York' },\r\n    { value: 'TX', label: 'Texas' },\r\n    // Add more states as needed\r\n  ];\r\n  \r\n  export const cities = {\r\n    CA: [\r\n      { value: 'LA', label: 'Los Angeles' },\r\n      { value: 'SF', label: 'San Francisco' },\r\n      // Add more cities for California\r\n    ],\r\n    NY: [\r\n      { value: 'NYC', label: 'New York City' },\r\n      { value: 'BUF', label: 'Buffalo' },\r\n      // Add more cities for New York\r\n    ],\r\n    TX: [\r\n      { value: 'HOU', label: 'Houston' },\r\n      { value: 'DAL', label: 'Dallas' },\r\n      // Add more cities for Texas\r\n    ]\r\n  };\r\n  import React, { useState } from 'react';\r\nimport Select from 'react-select';\r\n\r\n// Complete Country Data\r\nconst countries = [\r\n\r\n];\r\n\r\n// Placeholder data for states and cities\r\nconst statesData = {\r\n  AF: [\r\n    { value: 'KAB', label: 'Kabul' },\r\n    { value: 'HER', label: 'Herat' },\r\n  ],\r\n  US: [\r\n    { value: 'CA', label: 'California' },\r\n    { value: 'NY', label: 'New York' },\r\n    { value: 'TX', label: 'Texas' },\r\n  ],\r\n  // Add more states for other countries...\r\n};\r\n\r\nconst citiesData = {\r\n  KAB: [\r\n    { value: 'KAB', label: 'Kabul City' },\r\n  ],\r\n  HER: [\r\n    { value: 'HER', label: 'Herat City' },\r\n  ],\r\n  CA: [\r\n    { value: 'LA', label: 'Los Angeles' },\r\n    { value: 'SF', label: 'San Francisco' },\r\n  ],\r\n  NY: [\r\n    { value: 'NYC', label: 'New York City' },\r\n    { value: 'BUF', label: 'Buffalo' },\r\n  ],\r\n  TX: [\r\n    { value: 'HOU', label: 'Houston' },\r\n    { value: 'DAL', label: 'Dallas' },\r\n  ],\r\n  // Add more cities for other states...\r\n};\r\n\r\nconst ClientManagement = () => {\r\n  const [selectedCountry, setSelectedCountry] = useState(null);\r\n  const [selectedState, setSelectedState] = useState(null);\r\n  const [states, setStates] = useState([]);\r\n  const [cities, setCities] = useState([]);\r\n\r\n  const handleCountryChange = (country) => {\r\n    setSelectedCountry(country);\r\n    setStates(statesData[country.value] || []);\r\n    setSelectedState(null);\r\n    setCities([]);\r\n  };\r\n\r\n  const handleStateChange = (state) => {\r\n    setSelectedState(state);\r\n    setCities(citiesData[state.value] || []);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Select Location</h1>\r\n      <Select\r\n        options={countries}\r\n        onChange={handleCountryChange}\r\n        placeholder=\"Select Country\"\r\n      />\r\n      <Select\r\n        options={states}\r\n        onChange={handleStateChange}\r\n        placeholder=\"Select State\"\r\n        isDisabled={!selectedCountry}\r\n      />\r\n      <Select\r\n        options={cities}\r\n        onChange={(city) => console.log(city)}\r\n        placeholder=\"Select City\"\r\n        isDisabled={!selectedState}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientManagement;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}