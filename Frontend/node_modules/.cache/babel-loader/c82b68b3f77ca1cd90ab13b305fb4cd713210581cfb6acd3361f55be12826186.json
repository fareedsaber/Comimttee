{"ast":null,"code":"import React,{useState,useEffect}from'react';import{BrowserRouter as Router,Route,Routes,Navigate,useParams}from'react-router-dom';import CenterManagement from'./pages/Center.jsx';import AddUserToCenter from'./pages/AddUserCenter.jsx';import UsersInCenter from'./pages/UserInCenter.jsx';import CreateSuperAdmin from'./pages/CreateUserAdmin.jsx';import SuperAdminDashboard from'./pages/SuperAdminDashboard.jsx';import CenterDashboard from'./pages/Dashboard-Center.jsx';import Login from'./pages/Login.jsx';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[isAuthenticated,setIsAuthenticated]=useState(false);const[role,setRole]=useState(null);useEffect(()=>{const storedToken=localStorage.getItem('token');const storedRole=localStorage.getItem('role');if(storedToken&&storedRole){setIsAuthenticated(true);setRole(storedRole);}},[]);const handleLogout=()=>{localStorage.removeItem('token');localStorage.removeItem('role');localStorage.removeItem('center');setIsAuthenticated(false);setRole(null);};return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/login\",element:isAuthenticated?role==='superAdmin'?/*#__PURE__*/_jsx(Navigate,{to:\"/dashboard-superAdmin\"}):/*#__PURE__*/_jsx(Navigate,{to:\"/dashboard-center\"}):/*#__PURE__*/_jsx(Login,{setIsAuthenticated:setIsAuthenticated,setRole:setRole})}),/*#__PURE__*/_jsx(Route,{path:\"/center\",element:isAuthenticated&&role==='superAdmin'?/*#__PURE__*/_jsx(CenterManagement,{onLogout:handleLogout}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\"})}),/*#__PURE__*/_jsx(Route,{path:\"/adduser/:centerId\",element:isAuthenticated&&role==='superAdmin'?/*#__PURE__*/_jsx(AddUserToCenterWrapper,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\"})}),/*#__PURE__*/_jsx(Route,{path:\"/users/:centerId\",element:isAuthenticated&&role==='superAdmin'?/*#__PURE__*/_jsx(UsersInCenterWrapper,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\"})}),/*#__PURE__*/_jsx(Route,{path:\"/dashboard-superAdmin\",element:isAuthenticated&&role==='superAdmin'?/*#__PURE__*/_jsx(SuperAdminDashboard,{onLogout:handleLogout}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\"})}),/*#__PURE__*/_jsx(Route,{path:\"/dashboard-center\",element:isAuthenticated&&['centerAdmin','centerUser'].includes(role)?/*#__PURE__*/_jsx(CenterDashboard,{onLogout:handleLogout}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\"})}),/*#__PURE__*/_jsx(Route,{path:\"/create\",element:/*#__PURE__*/_jsx(CreateSuperAdmin,{})})]})});};const AddUserToCenterWrapper=()=>{const{centerId}=useParams();return/*#__PURE__*/_jsx(AddUserToCenter,{centerId:centerId});};const UsersInCenterWrapper=()=>{const{centerId}=useParams();return/*#__PURE__*/_jsx(UsersInCenter,{centerId:centerId});};export default App;","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","Navigate","useParams","CenterManagement","AddUserToCenter","UsersInCenter","CreateSuperAdmin","SuperAdminDashboard","CenterDashboard","Login","jsx","_jsx","jsxs","_jsxs","App","isAuthenticated","setIsAuthenticated","role","setRole","storedToken","localStorage","getItem","storedRole","handleLogout","removeItem","children","path","element","to","onLogout","AddUserToCenterWrapper","UsersInCenterWrapper","includes","centerId"],"sources":["C:/Users/moham/Downloads/Comimttee/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate, useParams } from 'react-router-dom';\nimport CenterManagement from './pages/Center.jsx';\nimport AddUserToCenter from './pages/AddUserCenter.jsx';\nimport UsersInCenter from './pages/UserInCenter.jsx';\nimport CreateSuperAdmin from './pages/CreateUserAdmin.jsx';\nimport SuperAdminDashboard from './pages/SuperAdminDashboard.jsx';\nimport CenterDashboard from './pages/Dashboard-Center.jsx';\nimport Login from './pages/Login.jsx';\n\nconst App = () => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [role, setRole] = useState(null);\n\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    const storedRole = localStorage.getItem('role');\n    if (storedToken && storedRole) {\n      setIsAuthenticated(true);\n      setRole(storedRole);\n    }\n  }, []);\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('role');\n    localStorage.removeItem('center');\n    setIsAuthenticated(false);\n    setRole(null);\n  };\n\n  return (\n    <Router>\n      <Routes>\n        <Route\n          path=\"/login\"\n          element={\n            isAuthenticated ? (\n              role === 'superAdmin' ? (\n                <Navigate to=\"/dashboard-superAdmin\" />\n              ) : (\n                <Navigate to=\"/dashboard-center\" />\n              )\n            ) : (\n              <Login setIsAuthenticated={setIsAuthenticated} setRole={setRole} />\n            )\n          }\n        />\n        <Route\n          path=\"/center\"\n          element={\n            isAuthenticated && role === 'superAdmin' ? (\n              <CenterManagement onLogout={handleLogout} />\n            ) : (\n              <Navigate to=\"/login\" />\n            )\n          }\n        />\n        <Route\n          path=\"/adduser/:centerId\"\n          element={\n            isAuthenticated && role === 'superAdmin' ? (\n              <AddUserToCenterWrapper />\n            ) : (\n              <Navigate to=\"/login\" />\n            )\n          }\n        />\n        <Route\n          path=\"/users/:centerId\"\n          element={\n            isAuthenticated && role === 'superAdmin' ? (\n              <UsersInCenterWrapper />\n            ) : (\n              <Navigate to=\"/login\" />\n            )\n          }\n        />\n        <Route\n          path=\"/dashboard-superAdmin\"\n          element={\n            isAuthenticated && role === 'superAdmin' ? (\n              <SuperAdminDashboard onLogout={handleLogout} />\n            ) : (\n              <Navigate to=\"/login\" />\n            )\n          }\n        />\n        <Route\n          path=\"/dashboard-center\"\n          element={\n            isAuthenticated && ['centerAdmin', 'centerUser'].includes(role) ? (\n              <CenterDashboard onLogout={handleLogout} />\n            ) : (\n              <Navigate to=\"/login\" />\n            )\n          }\n        />\n        <Route path=\"/create\" element={<CreateSuperAdmin />} />\n      </Routes>\n    </Router>\n  );\n};\n\nconst AddUserToCenterWrapper = () => {\n  const { centerId } = useParams();\n  return <AddUserToCenter centerId={centerId} />;\n};\n\nconst UsersInCenterWrapper = () => {\n  const { centerId } = useParams();\n  return <UsersInCenter centerId={centerId} />;\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}